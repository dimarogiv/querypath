{%- let section = "# =============================================================================\n#" -%}
{%- let not_configured = "# -- not configured --" -%}

# shellcheck shell=bash

# shellcheck disable=SC2034,SC2296
# shellcheck disable=SC2034,SC2296

{{ section }}
# When using querypath with --no-cmd, alias these internal functions as desired.
#

# Jump to a directory using only keywords.
function __querypath_z() {
  if ! (echo $@ | grep '^./\|^/\|^~' -q) && ([[ $# -gt 1 ]] || ([[ $# -eq 1 ]] && ! [[ -e ${@[$#]} ]]))
  then
    result="$(\command querypath query -- $@)"
  elif [[ $# -eq 1 ]]
  then
    result="$1"
  fi
  [[ -z "$result" ]] && echo "Error: result is not assigned!" >&2 && exit 1
  echo "$result"
  \command querypath add -- "$result"
}

# Jump to a directory using interactive search.
function __querypath_zi() {
    \builtin local result
    result="$(\command querypath query --interactive -- "$@")" && echo "${result}"
}

{{ section }}
# Commands for querypath. Disable these using --no-cmd.
#

{%- match cmd %}
{%- when Some with (cmd) %}

function {{ cmd }}() {
    __querypath_z "$@"
}

function {{ cmd }}i() {
    __querypath_zi "$@"
}

{%- when None %}

function q() {
    __querypath_z "$@"
}

function qi() {
    __querypath_zi "$@"
}

{%- endmatch %}

# Completions.
if [[ -o zle ]]; then
    __querypath_result=''

    function __querypath_z_complete() {
        # Only show completions when the cursor is at the end of the line.
        # shellcheck disable=SC2154
        [[ "{{ "${#words[@]}" }}" -eq "${CURRENT}" ]] || return 0

        if [[ "{{ "${#words[@]}" }}" -eq 2 ]]; then
            # Show completions for local directories.
            _cd -/

        elif [[ "${words[-1]}" == '' ]]; then
            # Show completions for Space-Tab.
            # shellcheck disable=SC2086
            __querypath_result="$(\command querypath query --exclude "$(__querypath_pwd || \builtin true)" --interactive -- ${words[2,-1]})" || __querypath_result=''

            # Set a result to ensure completion doesn't re-run
            compadd -Q ""

            # Bind '\e[0n' to helper function.
            \builtin bindkey '\e[0n' '__querypath_z_complete_helper'
            # Sends query device status code, which results in a '\e[0n' being sent to console input.
            \builtin printf '\e[5n'

            # Report that the completion was successful, so that we don't fall back
            # to another completion function.
            return 0
        fi
    }

    function __querypath_z_complete_helper() {
        if [[ -n "${__querypath_result}" ]]; then
            # shellcheck disable=SC2034,SC2296
            BUFFER="{{ cmd.unwrap_or("cd") }} ${(q-)__querypath_result}"
            __querypath_result=''
            \builtin zle reset-prompt
            \builtin zle accept-line
        else
            \builtin zle reset-prompt
        fi
    }
    \builtin zle -N __querypath_z_complete_helper
{%- if let Some(cmd) = cmd %}

    [[ "${+functions[compdef]}" -ne 0 ]] && \compdef __querypath_z_complete {{ cmd }}
{%- endif %}
fi

{{ section }}
# To initialize querypath, add this to your shell configuration file (usually ~/.zshrc):
#
# eval "$(querypath init zsh)"
